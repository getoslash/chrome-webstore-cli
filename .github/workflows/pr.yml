name: Check PR

on: [pull_request]

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x
    - name: Setup Velociraptor
      uses: jurassiscripts/setup-velociraptor@v1
    - name: Check code formatting
      run: vr format
    - name: Lint code
      run: vr lint

  language:
    name: language
    runs-on: ubuntu-latest
    steps:
    - name: Check language with Alex
      uses: brown-ccv/alex-recommends@v1.2.1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        pr_only: true

  test:
    name: test
    strategy:
      matrix:
        platform: [ ubuntu-latest, macOS-latest, windows-latest ]
    name: test/${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x
    - name: Setup Velociraptor
      uses: jurassiscripts/setup-velociraptor@v1
    - name: Install random number generator
      run: npm install make-random
    - name: Generate random number for seeding test shuffle
      uses: actions/github-script@v4
      id: generate-seed
      with:
        script: |
          const { randomInRange } = require('make-random')
          const result = await randomInRange(1, 2048)
          return result
        result-encoding: string
    - name: Warm up the Deno dependency cache
      run: vr warmup
    - name: Run all tests in random order
      run: vr test --shuffle=${{ steps.generate-seed.outputs.result }}

  coverage:
    needs: [ test ]
    name: coverage
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x
    - name: Setup Velociraptor
      uses: jurassiscripts/setup-velociraptor@v1
    - name: Generate random 1-byte signed decimal integer for seed
      id: generate-seed
      run: echo "::set-output name=seed::$(od -vAn -N1 -tu2 < /dev/urandom | xargs)"
    - name: Warm up the Deno dependency cache
      run: vr warmup
    - name: Run all tests in random order
      run: vr test --shuffle=${{ steps.generate-seed.outputs.seed }}
    - name: Generate coverage data
      run: vr coverage
    - name: Upload coverage report to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: cov_profile.lcov
        flags: unittests
        fail_ci_if_error: true
        verbose: false
